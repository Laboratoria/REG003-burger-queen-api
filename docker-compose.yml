version: "3"
services:
  db_mongo:
    # TODO: configura tu imagen de base de datos, te recomendamos una de estas:
    image: mongo
    volumes:
      - ./db-data:/data/dbProducts
    environment:
      MONGO_INITDB_ROOT_USERNAME: bq
      MONGO_INITDB_ROOT_PASSWORD: secret
    restart: always
    networks:
      - private
      - public
    expose:
      - '27017'
    ports:
      - '27018:27017'
  # mysqldb:
  #   # TODO: configura tu imagen de base ddatos, te recomendamos una de estas:
  #   image: mysql:5
  #   volumes:
  #     - ./db-data:/var/lib/mysql
  #   environment:
  #     MYSQL_ROOT_PASSWORD: supersecret
  #     MYSQL_DATABASE: bq
  #     MYSQL_USER: bq
  #     MYSQL_PASSWORD: secret
  #   restart: always
  #   networks:
  #     - private
    
#   node:
#     image: node:12 # https://hub.docker.com/_/node/
#     user: node
#     working_dir: /home/node/app
#     environment:
#       NODE_ENV: production
#       PORT: 8080
#       DB_URL_MONGO: mongodb://bqProducts:11235@bq:27018/bq?authSource=admin
#       JWT_SECRET: api_bq
#       ADMIN_EMAIL: admin@localhost
#       ADMIN_PASSWORD: changeme
#     volumes:
#       - ./:/home/node/app # montamos el codigo en el HOME del usuario _node_
#     expose:
#       - 8080 # nuestra app corre en el puerto 8080
#     ports:
#       # mapeamos el puerto 8080 de nuestro contenedor al puerto 80 de nuestra
#       # m√°quina
#       - 3000:8080
#     # reinstalamos las dependencias y levantamos el servidor
#     command: bash -c 'rm -rf node_modules && npm install && npm start'
#     # command: bash -c 'rm -rf node_modules && npm install && npm run dev'
#     depends_on:
#       - bq
#     networks:
#       - public
#       - private
networks:
  public:
    internal: false
  private:
    internal: true
